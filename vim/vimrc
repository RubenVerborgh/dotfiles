" ----------------
" General settings
" ----------------

set nocompatible                  " Enter vim mode

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set linebreak                     " Only break at word boundaries
set display=lastline              " Always show the last line

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.
set wildignore+=tmp/**            " Don't search inside temporary folders
set wildignore+=data/**           " Don't search inside data folders
set wildignore+=node_modules/**   " Don't search inside Node.js modules
set wildignore+=bower_components/**   " Don't search inside bower modules

set ignorecase                    " Case-insensitive searching,
set smartcase                     " but case-sensitive if expression contains a capital letter.

set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set notitle                       " Remove the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set directory=/tmp,.              " Keep swap files in one location

set tabstop=2                     " Global tab width.
set shiftwidth=2                  " And again, related.
set expandtab                     " Use spaces instead of tabs
set smartindent                   " Automatic indentation

set nofoldenable                  " Don't fold when opening

set laststatus=2                  " Show the status line all the time
set statusline=[%n]\ %<%.99f\ %h%w%m%r%y%=%-16(\ %l,%c\ %)%P

set mouse=a                       " Enable mouse in all modes

set spell                         " Always spell check

" Disable ex mode to avoid accidentally entering it
nnoremap Q <Nop>

" Move by visible lines, not by actual lines
nnoremap k gk
nnoremap j gj
nnoremap <up> gk
nnoremap <down> gj

" Clear search highlight with F10
map <F10> :nohl<CR>

" Set convenient leader key alternative
nmap ù \
vmap ù \

" Opposite of Shift+J
nmap <Leader>j i<CR><Esc>

" Easily save files when sudo was forgotten
cmap w!! w !sudo tee > /dev/null %

" ------------
" Load plugins
" ------------

" Load vim-plug, downloading it when necessary
if empty(glob("~/.vim/autoload/plug.vim"))
  silent exec '!curl -sfLo ~/.vim/autoload/plug.vim --create-dirs https://raw.github.com/junegunn/vim-plug/master/plug.vim'
endif
call plug#begin()

" Color schemes and appearance
Plug 'tomasr/molokai'
Plug 'jszakmeister/vim-togglecursor'

" Motions and operations
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
xmap \\ <Plug>Commentary
nmap \\ <Plug>CommentaryLine
Plug 'tpope/vim-surround'

" Git integration
Plug 'tpope/vim-fugitive'

" File navigation
Plug 'wincent/command-t', { 'do': 'silent! cd ruby/command-t && ruby extconf.rb && make' }
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
map <F2> :NERDTreeToggle<CR>
Plug 'mileszs/ack.vim'
if executable('ag')
  let g:ackprg = 'ag --vimgrep' ""
endif
nnoremap <Leader>f :Ack!<Space>


" EditorConfig support
Plug 'editorconfig/editorconfig-vim'
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" File type support
Plug 'groenewege/vim-less',      { 'for': 'less' }
Plug 'othree/html5.vim',         { 'for': 'html' }
Plug 'plasticboy/vim-markdown',  { 'for': 'markdown' }
Plug 'vim-scripts/JSON.vim',     { 'for': 'json' }
Plug 'pangloss/vim-javascript',  { 'for': 'javascript' }
Plug 'LaTeX-Box-Team/LaTeX-Box', { 'for': 'tex' }
let g:LatexBox_latexmk_options="-synctex=1"
let g:LatexBox_ignore_warnings=
  \['Underfull',
  \ 'Overfull',
  \ 'specifier changed to',
  \ 'Token not allowed in a PDF string',
  \ 'Package glossaries Warning',
  \ 'Package natbib Warning: Empty `thebibliography',
  \ 'Marginpar on page',
  \ 'Package microtype Warning',
  \ 'Label(s) may have changed.',
  \ 'Font shape',
  \ 'Size substitutions with differences',
  \ ]
let g:LatexBox_latexmk_async=1
map <silent> <Leader>ls :silent
    \ !/Applications/Skim.app/Contents/SharedSupport/displayline -r -b -g
    \ <C-R>=line('.')<CR> "<C-R>=LatexBox_GetOutputFile()<CR>" "%:p" <CR>
" Wrap words with a TeX command
nmap <Leader>lm ysiw}i\<ESC>a
vmap <Leader>lm <Plug>LatexWrapSelection

" Various utilities
Plug 'bronson/vim-trailing-whitespace'
Plug 'salsifis/vim-transpose'
Plug 'Raimondi/delimitMate'
let b:delimitMate_expand_space = 1
let b:delimitMate_expand_cr = 1

call plug#end()

" Activate color scheme
:silent! colorscheme molokai
set t_Co=256

" Remote file editing
let g:netrw_silent = 1
