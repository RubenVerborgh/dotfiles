" ----------------
" General settings
" ----------------

set nocompatible                     " Enter vim mode

set showcmd                          " Display incomplete commands

set linebreak                        " Only break at word boundaries
set display=lastline                 " Always show the last line

set backspace=indent,eol,start       " Intuitive backspacing

set hidden                           " Handle multiple buffers better

set wildmenu                         " Enhanced command line completion
set wildmode=list:longest            " Complete files like a shell
set wildignore+=tmp/*                " Don't search inside temporary folders
set wildignore+=data/*               " Don't search inside data folders
set wildignore+=*/node_modules/*     " Don't search inside Node.js modules
set wildignore+=*/bower_components/* " Don't search inside bower modules

set ignorecase                       " Case-insensitive searching,
set smartcase                        " but case-sensitive when typing capitals

set ruler                            " Show cursor position

set hlsearch                         " Highlight matches
set incsearch                        " Highlight matches as you type

set scrolloff=3                      " Show 3 lines of context around the cursor

set notitle                          " Remove the terminal's title

set visualbell                       " No beeping

set nobackup                         " No backup before overwriting
set directory=/tmp,.                 " Keep swap files in one location

set tabstop=2                        " Global tab width
set shiftwidth=2                     " And again, related
set expandtab                        " Use spaces instead of tabs
set smartindent                      " Automatic indentation

set wrap                             " Turn on line wrapping
set breakindent                      " Indent wrapped lines
set breakindentopt=shift:2           " Indent wrapped lines slightly more

set nofoldenable                     " Don't fold when opening

set mouse=a                          " Enable mouse in all modes

set spell                            " Always spell check

set completeopt=menu,popup           " Complete via menu and show popup

set ballooneval                      " Enable balloon tooltips
set balloondelay=0

" Disable ex mode to avoid accidentally entering it
nnoremap Q <Nop>

" Move by visible lines, not by actual lines
nnoremap k gk
nnoremap j gj
nnoremap <up> gk
nnoremap <down> gj

" Clear search highlight with F10
map <F10> :nohl<CR>

" Opposite of Shift+J
nmap <Leader>j i<CR><Esc>

" Easily save files when sudo was forgotten
cmap w!! w !sudo tee > /dev/null %

" Load template on new file
au BufNewFile * :silent! exec ":r ~/.vim/templates/template.".expand("%:e"). "|normal kdd"

" ------------
" Load plugins
" ------------

" Load vim-plug, downloading it when necessary
if empty(glob("~/.vim/autoload/plug.vim"))
  silent exec '!curl -sfLo ~/.vim/autoload/plug.vim --create-dirs https://raw.github.com/junegunn/vim-plug/master/plug.vim'
endif
call plug#begin()

" Color schemes and appearance
Plug 'tomasr/molokai'
Plug 'jszakmeister/vim-togglecursor'
Plug 'itchyny/lightline.vim'
set noshowmode
set laststatus=2
set ttimeoutlen=30
let g:lightline = { 'colorscheme': 'molokai' }

" Motions and operations
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
xmap \\ <Plug>Commentary
nmap \\ <Plug>CommentaryLine
Plug 'tpope/vim-surround'

" Cycle through yanks on paste
Plug 'svermeulen/vim-yoink'
Plug 'svermeulen/vim-subversive'
let g:yoinkIncludeDeleteOperations = 1
let g:yoinkSwapClampAtEnds = 0
nmap <C-p> <plug>(YoinkPostPasteSwapBack)
nmap p <plug>(YoinkPaste_p)
nmap P <plug>(YoinkPaste_P)
xmap p <plug>(SubversiveSubstitute)
xmap P <plug>(SubversiveSubstitute)

" Snippets (based on https://stackoverflow.com/a/22253548/476820)
Plug 'ervandew/supertab'
let g:SuperTabDefaultCompletionType = '<C-n>'
if has('gui_running')
  Plug 'ycm-core/YouCompleteMe', {
    \'do': './install.py --ts-completer',
    \'commit': '4e480a317',
    \'frozen': 1
  \}
end
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:ycm_min_num_identifier_candidate_chars = 8
Plug 'SirVer/ultisnips'
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"
Plug 'honza/vim-snippets'

" File navigation
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
let g:fzf_preview_window = []
nnoremap <silent> <Leader>t :Files<CR>
nnoremap <silent> <Leader>f :Ag<CR>

" EditorConfig support
Plug 'editorconfig/editorconfig-vim'
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']

" File type support
Plug 'plasticboy/vim-markdown',            { 'for': 'markdown' }
Plug 'RubenVerborgh/vim-markup-assistant', { 'for': 'markdown' }
Plug 'groenewege/vim-less',                { 'for': 'less' }
Plug 'othree/html5.vim',                   { 'for': 'html' }
Plug 'mattn/emmet-vim',                    { 'for': 'html' }
Plug 'vim-scripts/JSON.vim',               { 'for': 'json' }
Plug 'pangloss/vim-javascript',            { 'for': 'javascript' }
Plug 'herringtondarkholme/yats',           { 'for': 'typescript' }
Plug 'Quramy/tsuquyomi',                   { 'for': 'typescript' }
Plug 'niklasl/vim-rdf'
Plug 'rvesse/vim-sparql',                  { 'for': 'sparql' }
Plug 'nginx/nginx',                        { 'rtp': 'contrib/vim' }
Plug 'digitaltoad/vim-pug',                { 'for': 'pug' }
Plug 'LaTeX-Box-Team/LaTeX-Box',           { 'for': 'tex' }
let g:LatexBox_latexmk_options="-synctex=1"
let g:LatexBox_ignore_warnings=
  \['Underfull',
  \ 'Overfull',
  \ 'specifier changed to',
  \ 'Token not allowed in a PDF string',
  \ 'Package glossaries Warning',
  \ 'Package natbib Warning: Empty `thebibliography',
  \ 'Marginpar on page',
  \ 'Package microtype Warning',
  \ 'Label(s) may have changed.',
  \ 'Font shape',
  \ 'Size substitutions with differences',
  \ ]
let g:LatexBox_latexmk_async=1
map <silent> <Leader>ls :silent
    \ !/Applications/Skim.app/Contents/SharedSupport/displayline -r -b -g
    \ <C-R>=line('.')<CR> "<C-R>=LatexBox_GetOutputFile()<CR>" "%:p" <CR>

" Various utilities
Plug 'airblade/vim-rooter'
Plug 'tpope/vim-fugitive'
Plug 'ntpeters/vim-better-whitespace'
Plug 'salsifis/vim-transpose'
Plug 'junegunn/vim-easy-align'
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

call plug#end()

" Activate color scheme
silent! colorscheme molokai
highlight Normal guibg=#111111
set t_Co=256
if (has("termguicolors"))
  set termguicolors
endif

" Remote file editing
let g:netrw_silent = 1
